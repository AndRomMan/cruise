{"version":3,"names":[],"mappings":"","sources":["input-validating.js"],"sourcesContent":["/* eslint-disable no-invalid-this */\n'use strict';\n\n(function () {\n  var PATTERN = '+7 (___) ___ ____';\n\n  function keyCodeProcessing(evt) {\n    var keyCode;\n    if (event.keyCode) {\n      keyCode = event.keyCode;\n      var pos = this.selectionStart;\n      if (pos < 3) evt.preventDefault();\n      var i = 0;\n      var def = PATTERN.replace(/\\D/g, '');\n      var val = this.value.replace(/\\D/g, '');\n      var newValue = PATTERN.replace(/[_\\d]/g, function (a) {\n        return i < val.length ? val.charAt(i++) || def.charAt(i) : a;\n      });\n      i = newValue.indexOf('_');\n      if (i !== -1) {\n        if (i < 5) {\n          i = 3;\n        }\n        newValue = newValue.slice(0, i);\n      }\n      var reg = PATTERN.substr(0, this.value.length)\n        .replace(/_+/g, function (a) {\n          return '\\\\d{1,' + a.length + '}';\n        })\n        .replace(/[+()]/g, '\\\\$&');\n      reg = new RegExp('^' + reg + '$');\n      if (!reg.test(this.value) || this.value.length < 5 || (keyCode > 47 && keyCode < 58)) this.value = newValue;\n      if (evt.type === 'blur' && this.value.length < 5) this.value = '';\n    }\n  }\n\n  function inputProcessing(input) {\n    input.addEventListener('input', keyCodeProcessing, false);\n    input.addEventListener('focus', keyCodeProcessing, false);\n    input.addEventListener('blur', keyCodeProcessing, false);\n    input.addEventListener('keydown', keyCodeProcessing, false);\n  }\n\n  function inputPhoneHolder() {\n    var inputPhone = document.querySelector('input[type=\"tel\"]');\n    inputProcessing(inputPhone);\n  }\n\n  window.addEventListener('DOMContentLoaded', inputPhoneHolder);\n})();\n"],"file":"input-validating.js"}